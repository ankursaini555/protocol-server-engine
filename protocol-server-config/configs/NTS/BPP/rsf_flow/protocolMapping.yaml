protocol:
  settle:
    sessionData:
    # setting up url 
      - business_key: url
        extractionPath: 'context.bap_uri && obj.context.bpp_uri && obj.context.bap_uri == session.subscriber_url ? obj.context.bpp_uri : obj.context.bap_uri ||  obj.context.bpp_uri && obj.context.bpp_uri || obj.context.bap_uri && obj.context.bap_uri'

      - business_key: bap_id
        extractionPath: context.bap_id && obj.context.bap_id || session && session.subscriber_id
      - business_key: bap_uri
        extractionPath: context.bap_uri && obj.context.bap_uri || session && session.subscriber_url
      - business_key: bpp_id
        extractionPath: context.bpp_id && obj.context.bpp_id || session && session.subscriber_id
      - business_key: bpp_uri
        extractionPath: context.bpp_uri && obj.context.bpp_uri || session && session.subscriber_url



      - business_key: cityCode
        extractionPath: context.location.city.code || session.cityCode
      - business_key: countryCode
        extractionPath: context.location.country.code || session.countryCode
      - business_key: message_id
        extractionPath: context.message_id
      - business_key: domain
        extractionPath: context.domain

#store order details etc in session
      - business_key: collector_app_id
        extractionPath:  message.collector_app_id

      - business_key: receiver_app_id
        extractionPath:  message.receiver_app_id

      - business_key: settlementType
        extractionPath:  message.settlement.type

      - business_key: settlementId
        extractionPath:  message.settlement.id

      - business_key: order_data
        # extractionPath: context.message_id
        extractionPath: "message.settlement.orders[]{order_id:id, order_amount:amount.value,  inter_participant_amount:inter_participant.amount.value,collector_amount: collector.amount.value,self_amount:self.amount.value  ,    provider_id:provider.id, provider_name: provider.name,  provider_account_no : provider.bank_details.account_no,  provider_ifsc_code: provider.bank_details.ifsc_code, provider_amount: provider.amount.value   }"





    mapping:
      - business_key: context.action
        extractionPath: context.action
      - business_key: context.transaction_id
        extractionPath: context.transaction_id
      - business_key: context.message_id
        extractionPath: context.message_id

        #message
      
      - business_key: message.collector_app_id
        extractionPath:  message.collector_app_id

      - business_key: message.receiver_app_id
        extractionPath:  message.receiver_app_id

      - business_key: message.settlementType
        extractionPath:  message.settlement.type

      - business_key: message.settlementId
        extractionPath:  message.settlement.id

      - business_key: message.settlement.orders
        extractionPath: "message.settlement.orders[]{id:order_id, order_amount:amount.value,  inter_participant_amount:inter_participant.amount.value,collector_amount: collector.amount.value,self_amount:self.amount.value  ,    provider_id:provider.id, provider_name: provider.name,  provider_account_no : provider.bank_details.account_no,  provider_ifsc_code: provider.bank_details.ifsc_code, provider_amount: provider.amount.value   }"
 

  on_settle:
    sessionData:
      - beckn_key: settlement_status
        value: data.status
      - beckn_key: settlement_reference_no
        value: data.reference_no


      - beckn_key: provider_status
        value: data.provider_status
      - beckn_key: provider_reference_no
        value: data.provider_reference_no
      
      - beckn_key: message.settlement.orders[0].inter_participant.status
        value:  data.inter_participant_status && data.inter_participant_status

      - beckn_key: message.settlement.orders[0].self.status
        value:  data.self_status && data.self_status

      - beckn_key: message.settlement.orders[0].self.status
        value:  data.self_status && data.self_status


    mapping:
      - beckn_key: context
        value: session
        compute: buildContext(session, action)

      - beckn_key: message.collector_app_id
        value: session.collector_app_id && session.collector_app_id

      - beckn_key: message.receiver_app_id
        value: session.receiver_app_id && session.receiver_app_id

      - beckn_key: message.settlement.type
        value: session.settlementType && session.settlementType

      - beckn_key: message.settlement.id
        value: session.settlementId && session.settlementId


# order object mapping
      - beckn_key: message.settlement.orders[0].id
        value:  session.order_data[0].order_id     && session.order_data[0].order_id

      - beckn_key: message.settlement.orders[0].amount.value
        value:  session.order_data[0].order_amount     && session.order_data[0].order_amount 

      - beckn_key: message.settlement.orders[0].inter_participant.amount.value
        value:  session.order_data[0].inter_participant_amount     && session.order_data[0].inter_participant_amount 
      - beckn_key: message.settlement.orders[0].inter_participant.amount.currency
        value:  session.order_data[0].inter_participant_amount     && session.currency 

      - beckn_key: message.settlement.orders[0].collector.amount.value
        value:  session.order_data[0].collector_amount     && session.order_data[0].collector_amount 
      - beckn_key: message.settlement.orders[0].collector.amount.currency
        value:  session.order_data[0].collector_amount    && session.currency

      - beckn_key: message.settlement.orders[0].self.amount.value
        value:  session.order_data[0].self_amount     && session.order_data[0].self_amount 
      - beckn_key: message.settlement.orders[0].self.amount.currency
        value:  session.order_data[0].self_amount   && session.currency

      - beckn_key: message.settlement.orders[0].inter_participant.settled_amount.value
        value:  session.order_data[0].inter_participant_amount &&  data.settled_amount
      - beckn_key: message.settlement.orders[0].inter_participant.settled_amount.currency
        value:  session.order_data[0].inter_participant_amount && session.currency

      - beckn_key: message.settlement.orders[0].self.status
        value:  data.status && data.status
      - beckn_key: message.settlement.orders[0].self.reference_no
        value:  data.reference_no && data.reference_no

      - beckn_key: message.settlement.orders[0].inter_participant.status
        value:  session.order_data[0].inter_participant_amount && data.status
      - beckn_key: message.settlement.orders[0].inter_participant.reference_no
        value:  session.order_data[0].inter_participant_amount && data.reference_no
  #provider mapping
      - beckn_key: message.settlement.orders[0].provider.id
        value:  session.order_data[0].provider_id && session.order_data[0].provider_id
      - beckn_key: message.settlement.orders[0].provider.amount.value
        value:  session.order_data[0].provider_amount && session.order_data[0].provider_amount
      - beckn_key: message.settlement.orders[0].provider.amount.currency
        value:  session.order_data[0].provider_amount && session.currency
      - beckn_key: message.settlement.orders[0].provider.status
        value:  data.provider_status && data.provider_status

      - beckn_key: message.settlement.orders[0].provider.reference_no
        value:  data.provider_reference_no && data.provider_reference_no
      - beckn_key: message.settlement.orders[0].self.error.code
        value:  data.error_code && data.error_code
      - beckn_key: message.settlement.orders[0].self.error.message
        value:  data.error_message && data.error_message

      - beckn_key: message.settlement.orders[0].inter_participant.error.code
        value:  data.error_code && data.error_code
      - beckn_key: message.settlement.orders[0].inter_participant.error.message
        value:  data.error_message && data.error_message
#interparticipant error


      - beckn_key: message.settlement.orders[0].provider.error
        value:  data.provider_error && data.provider_error

      - beckn_key: message.settlement.orders[0].self.error
        value:  data.provider_error && data.provider_error

      - beckn_key: message.settlement.orders[0].inter_participant.error
        value:  data.provider_error && data.provider_error

      - beckn_key: message.settlement.orders[0].inter_participant.status
        value:  data.inter_participant_status && data.inter_participant_status
      - beckn_key: message.settlement.orders[0].self.status
        value:  data.self_status && data.self_status

  report:
    sessionData:
      - business_key: bap_id
        extractionPath: context.bap_id
      - business_key: bap_uri
        extractionPath: context.bap_uri
      - business_key: cityCode
        extractionPath: context.location.city.code || session.cityCode
      - business_key: countryCode
        extractionPath: context.location.country.code || session.countryCode
      - business_key: message_id
        extractionPath: context.message_id

    mapping:
      - business_key: context.action
        extractionPath: context.action    
      - business_key: context.transaction_id
        extractionPath: context.transaction_id
      - business_key: context.message_id
        extractionPath: context.message_id

      #message
      
      - business_key: message.ref_transaction_id
        extractionPath: message.ref_transaction_id
      - business_key: message.ref_message_id
        extractionPath: message.ref_message_id

  on_report:
    mapping:
      - beckn_key: context
        value: session
        compute: buildContext(session, action)

      - beckn_key: message.collector_app_id
        value: session.collector_app_id && session.collector_app_id

      - beckn_key: message.receiver_app_id
        value: session.receiver_app_id && session.receiver_app_id

      - beckn_key: message.settlement.type
        value: session.settlementType && session.settlementType

      - beckn_key: message.settlement.id
        value: session.settlementId && session.settlementId


# order object mapping
      - beckn_key: message.settlement.orders[0].id
        value:  session.order_data[0].order_id     && session.order_data[0].order_id 

      - beckn_key: message.settlement.orders[0].amount.value
        value:  session.order_data[0].order_amount     && session.order_data[0].order_amount 

      - beckn_key: message.settlement.orders[0].inter_participant.amount.value
        value:  session.order_data[0].inter_participant_amount     && session.order_data[0].inter_participant_amount 
      - beckn_key: message.settlement.orders[0].inter_participant.amount.currency
        value:  session.order_data[0].inter_participant_amount     && session.currency 

      - beckn_key: message.settlement.orders[0].collector.amount.value
        value:  session.order_data[0].collector_amount     && session.order_data[0].collector_amount 
      - beckn_key: message.settlement.orders[0].collector.amount.currency
        value:  session.order_data[0].collector_amount    && session.currency

      - beckn_key: message.settlement.orders[0].self.amount.value
        value:  session.order_data[0].self_amount     && session.order_data[0].self_amount 
      - beckn_key: message.settlement.orders[0].self.amount.currency
        value:  session.order_data[0].self_amount   && session.currency

      - beckn_key: message.settlement.orders[0].inter_participant.settled_amount.value
        value:  session.order_data[0].inter_participant_amount &&  data.settled_amount
      - beckn_key: message.settlement.orders[0].inter_participant.settled_amount.currency
        value:  session.order_data[0].inter_participant_amount && session.currency

      - beckn_key: message.settlement.orders[0].self.status
        value:  data.status && data.status
      - beckn_key: message.settlement.orders[0].self.reference_no
        value:  data.reference_no && data.reference_no

      - beckn_key: message.settlement.orders[0].inter_participant.status
        value:  session.order_data[0].inter_participant_amount && data.status
      - beckn_key: message.settlement.orders[0].inter_participant.reference_no
        value:  session.order_data[0].inter_participant_amount && data.reference_no
  #provider mapping
      - beckn_key: message.settlement.orders[0].provider.id
        value:  session.order_data[0].provider_id && session.order_data[0].provider_id
      - beckn_key: message.settlement.orders[0].provider.amount.value
        value:  session.order_data[0].provider_amount && session.order_data[0].provider_amount
      - beckn_key: message.settlement.orders[0].provider.amount.currency
        value:  session.order_data[0].provider_amount && session.currency
      - beckn_key: message.settlement.orders[0].provider.status
        value:  data.provider_status && data.provider_status

      - beckn_key: message.settlement.orders[0].provider.error
        value:  data.provider_error && data.provider_error

      - beckn_key: message.settlement.orders[0].provider.reference_no
        value:  data.provider_reference_no && data.provider_reference_no

      - beckn_key: message.settlement.orders[0].inter_participant.status
        value:  data.inter_participant_status && data.inter_participant_status
      - beckn_key: message.settlement.orders[0].inter_participant.error
        value:  data.inter_participant_error && data.inter_participant_error
      - beckn_key: message.settlement.orders[0].inter_participant.reference_no
        value:  data.inter_participant_reference_no && data.inter_participant_reference_no


      - beckn_key: message.settlement.orders[0].self.status
        value:  data.self_status && data.self_status
      - beckn_key: message.settlement.orders[0].self.error
        value:  data.self_error && data.self_error
      - beckn_key: message.settlement.orders[0].self.reference_no
        value:  data.self_reference_no && data.self_reference_no


      - beckn_key: message.settlement.orders[0].error.code
        value:  data.error_code && data.error_code
      - beckn_key: message.settlement.orders[0].error.message
        value:  data.error_message && data.error_message


  recon:
    sessionData:
      - business_key: bap_id
        extractionPath: context.bap_id
      - business_key: bap_uri
        extractionPath: context.bap_uri
      - business_key: cityCode
        extractionPath: context.location.city.code || session.cityCode
      - business_key: countryCode
        extractionPath: context.location.country.code || session.countryCode
      - business_key: message_id
        extractionPath: context.message_id
      - business_key: order_data
        extractionPath: "message.orders[]{order_id:id,  amount:amount.value }.settlements[]{settlement_id:id, payment_id: payment_id, settlement_status:status,settlement_amount:amount.value,   settlement_commission:commission.value ,   withholding_amount: withholding_amount.value, tcs_amount:tcs.value, tds_amount:tds.value, settlement_updatedat : updated_at, settlement_ref_no: settlement_ref_no}"


    mapping:
      - business_key: context.action
        extractionPath: context.action
      - business_key: context.transaction_id
        extractionPath: context.transaction_id
      - business_key: context.message_id
        extractionPath: context.message_id

      #message
      - business_key: order_data
        extractionPath: "message.orders[]{order_id:id,  amount:amount.value }.settlements[]{settlement_id:id, payment_id: payment_id, settlement_status:status,settlement_amount:amount.value,   settlement_commission:commission.value ,   withholding_amount: withholding_amount.value, tcs_amount:tcs.value, tds_amount:tds.value, settlement_updatedat : updated_at, settlement_ref_no: settlement_ref_no}"

      #reverse mapping
      - beckn_key: context
        value: session
        compute: buildContext(session, action)

      - beckn_key: message.orders[0].id
        value: session.order_data[0].order_id && session.order_data[0].order_id

      - beckn_key: message.orders[0].amount.value
        value: data.total_order_amount
      - beckn_key: message.orders[0].amount.currency
        value: session.order_data[0].self_amount && session.currency
        
      - beckn_key: message.orders[0].settlements[0].id
        value: session.settlementId && session.settlementId

      - beckn_key: message.orders[0].settlements[0].payment_id
        value: data.payment_id && data.payment_id

      - beckn_key: message.orders[0].settlements[0].status
        value: data.status && data.status

      # - beckn_key: message.orders[0].settlements[0].status
      #   value: session.settlement_status && session.settlement_status

      - beckn_key: message.orders[0].settlements[0].amount.value
        value: data.settlement_amount && data.settlement_amount
      - beckn_key: message.orders[0].settlements[0].amount.currency
        value: data.settlement_amount && session.currency

      - beckn_key: message.orders[0].settlements[0].commission.value
        value: data.settlement_commission && data.settlement_commission
      - beckn_key: message.orders[0].settlements[0].commission.currency
        value: data.settlement_commission && session.currency

      - beckn_key: message.orders[0].settlements[0].withholding_amount.value
        value: data.withholding_amount && data.withholding_amount
      - beckn_key: message.orders[0].settlements[0].withholding_amount.currency
        value: data.withholding_amount && session.currency

      - beckn_key: message.orders[0].settlements[0].tcs.value
        value: data.tcs_amount && data.tcs_amount
      - beckn_key: message.orders[0].settlements[0].tcs.currency
        value: data.tcs_amount && session.currency

      - beckn_key: message.orders[0].settlements[0].tds.value
        value: data.tds_amount && data.tds_amount
      - beckn_key: message.orders[0].settlements[0].tds.currency
        value: data.tds_amount && session.currency

      - beckn_key: message.orders[0].settlements[0].settlement_ref_no
        value: data.settlement_ref_no && data.settlement_ref_no
       
      - beckn_key: message.orders[0].settlements[0].updated_at
        # value: session.order_data[0].settlement_updatedat && session.order_data[0].settlement_updatedat
        value: new Date().toISOString()


  on_recon:
    mapping:
      - beckn_key: context
        value: session
        compute: buildContext(session, action)

      - beckn_key: message.orders[0].id
        value: session.order_data[0].order_id && session.order_data[0].order_id

      - beckn_key: message.orders[0].amount.value
        value: session.order_data[0].amount && session.order_data[0].amount
      - beckn_key: message.orders[0].amount.currency
        value: session.order_data[0].amount && session.currency

      #settlement
      - beckn_key: message.orders[0].recon_accord
        value: (String(data.recon_accord).toLowerCase() == "true")?true:false

      - beckn_key: message.orders[0].settlements[0].id
        value: session.order_data[0].settlement_id && session.order_data[0].settlement_id

      - beckn_key: message.orders[0].settlements[0].payment_id
        value: session.order_data[0].payment_id && session.order_data[0].payment_id

      - beckn_key: message.orders[0].settlements[0].status
        value: session.order_data[0].settlement_status && session.order_data[0].settlement_status

      - beckn_key: message.orders[0].settlements[0].amount.value
        value: session.order_data[0].settlement_amount && session.order_data[0].settlement_amount
      - beckn_key: message.orders[0].settlements[0].amount.currency
        value: session.order_data[0].settlement_amount && session.currency
      - beckn_key: message.orders[0].settlements[0].amount.diff_value
        value: data.diff_value_amount && data.diff_value_amount

      - beckn_key: message.orders[0].settlements[0].commission.value
        value: session.order_data[0].settlement_commission && session.order_data[0].settlement_commission
      - beckn_key: message.orders[0].settlements[0].commission.currency
        value: session.order_data[0].settlement_commission && session.currency
      - beckn_key: message.orders[0].settlements[0].commission.diff_value
        value: data.diff_value_commission && data.diff_value_commission

      - beckn_key: message.orders[0].settlements[0].withholding_amount.value
        value: session.order_data[0].withholding_amount && session.order_data[0].withholding_amount
      - beckn_key: message.orders[0].settlements[0].withholding_amount.currency
        value: session.order_data[0].withholding_amount && session.currency
      - beckn_key: message.orders[0].settlements[0].withholding_amount.diff_value
        value: data.diff_value_withholding_amount && data.diff_value_withholding_amount


      - beckn_key: message.orders[0].settlements[0].tcs.value
        value: session.order_data[0].tcs_amount && session.order_data[0].tcs_amount
      - beckn_key: message.orders[0].settlements[0].tcs.currency
        value: session.order_data[0].tcs_amount && session.currency
      - beckn_key: message.orders[0].settlements[0].tcs.diff_value
        value: data.diff_value_tcs && data.diff_value_tcs

      - beckn_key: message.orders[0].settlements[0].tds.value
        value: session.order_data[0].tds_amount && session.order_data[0].tds_amount
      - beckn_key: message.orders[0].settlements[0].tds.currency
        value: session.order_data[0].tds_amount && session.currency
      - beckn_key: message.orders[0].settlements[0].tds.diff_value
        value: data.diff_value_tds && data.diff_value_tds

      - beckn_key: message.orders[0].settlements[0].settlement_ref_no
        value: session.order_data[0].settlement_ref_no && session.order_data[0].settlement_ref_no
       
      - beckn_key: message.orders[0].settlements[0].updated_at
        value: session.order_data[0].settlement_updatedat && session.order_data[0].settlement_updatedat

#reverse recon
      - business_key: context.action
        extractionPath: context.action
      - business_key: context.transaction_id
        extractionPath: context.transaction_id
      - business_key: context.message_id
        extractionPath: context.message_id
      - business_key: order_data
        extractionPath: "message.orders[]{order_id:id,  amount:amount.value }.settlements[]{settlement_id:id, payment_id: payment_id, settlement_status:status,settlement_amount:amount.value,   settlement_commission:commission.value ,   withholding_amount: withholding_amount.value, tcs_amount:tcs.value, tds_amount:tds.value, settlement_updatedat : updated_at, settlement_ref_no: settlement_ref_no}"


      - beckn_key: message.orders[0].settlements[0].due_date
        value: "const d = new Date(); d.setDate(d.getDate() + 2); d.toISOString().split('T')[0];"
        

    sessionData:
      - business_key: bap_id
        extractionPath: context.bap_id
      - business_key: bap_uri
        extractionPath: context.bap_uri
      - business_key: cityCode
        extractionPath: context.location.city.code || session.cityCode
      - business_key: countryCode
        extractionPath: context.location.country.code || session.countryCode
      - business_key: message_id
        extractionPath: context.message_id
      - business_key: order_data
        extractionPath: "message.orders[]{order_id:id,  amount:amount.value }.settlements[]{settlement_id:id, payment_id: payment_id, settlement_status:status,settlement_amount:amount.value,   settlement_commission:commission.value ,   withholding_amount: withholding_amount.value, tcs_amount:tcs.value, tds_amount:tds.value, settlement_updatedat : updated_at, settlement_ref_no: settlement_ref_no}"




      #message
      - business_key: order_data
        extractionPath: "message.orders[]{order_id:id,  amount:amount.value }.settlements[]{settlement_id:id, payment_id: payment_id, settlement_status:status,settlement_amount:amount.value,   settlement_commission:commission.value ,   withholding_amount: withholding_amount.value, tcs_amount:tcs.value, tds_amount:tds.value, settlement_updatedat : updated_at, settlement_ref_no: settlement_ref_no}"




  on_selector: